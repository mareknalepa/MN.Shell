<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MN.Shell.Controls">

    <Style TargetType="MenuBase" x:Key="MenuBaseStyle">
        <Setter Property="Background" Value="{DynamicResource BaseBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuBase">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <controls:MenuItemsPanel IsItemsHost="True"
                                                     VerticalAlignment="Stretch"
                                                     EllipsisMenuItem="{Binding ., ElementName=EllipsisMenuItem}"/>
                            <Menu>
                                <Menu.Template>
                                    <ControlTemplate>
                                        <ItemsPresenter HorizontalAlignment="Left"/>
                                    </ControlTemplate>
                                </Menu.Template>
                                <MenuItem x:Name="EllipsisMenuItem"
                                          HorizontalAlignment="Left"
                                          Header="..."/>
                            </Menu>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Menu" BasedOn="{StaticResource MenuBaseStyle}">
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="ContextMenu" BasedOn="{StaticResource MenuBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
    </Style>

    <Style TargetType="Separator" x:Key="{x:Static MenuItem.SeparatorStyleKey}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="32" SharedSizeGroup="Icon"/>
                            <ColumnDefinition Width="*" MinWidth="100"/>
                            <ColumnDefinition Width="Auto" MinWidth="40" SharedSizeGroup="Shortcut"/>
                            <ColumnDefinition Width="13"/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.Column="1" Grid.ColumnSpan="3"
                                Background="{DynamicResource InactiveBorderBrush}"
                                BorderThickness="0"
                                Height="1"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>

    <Style TargetType="RepeatButton" x:Key="MenuScrollButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="MinHeight" Value="16"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Margin="0" BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Path Fill="{TemplateBinding Foreground}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HighlightBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ScrollViewer" BasedOn="{x:Null}" x:Key="MenuScrollViewerStyle">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <RepeatButton Style="{StaticResource MenuScrollButtonStyle}"
                                      Grid.Row="0"
                                      Content="M 0 4 L 8 4 L 4 0 Z"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                        </RepeatButton>
                        <ScrollContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}"/>
                        <RepeatButton Style="{StaticResource MenuScrollButtonStyle}"
                                      Grid.Row="2"
                                      Content="M 0 0 L 4 4 L 8 0 Z"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <RepeatButton.Visibility>
                                <MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100">
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="MenuItem" x:Key="MenuTopLevelHeaderTemplateKey">
        <Border x:Name="Border"
                Background="{DynamicResource BaseBrush}"
                BorderBrush="Transparent"
                BorderThickness="0"
                Height="30"
                VerticalAlignment="Stretch">
            <Grid>
                <ContentPresenter Margin="10,2"
                                  ContentSource="Header"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True"/>
                <Popup x:Name="PART_Popup"
                       Placement="Bottom"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                    <Border Background="{DynamicResource BackgroundBrush}"
                            BorderBrush="{DynamicResource BorderBrush}"
                            BorderThickness="1"
                            Padding="1"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer CanContentScroll="True"
                                      Style="{StaticResource MenuScrollViewerStyle}">
                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="MenuItem" x:Key="MenuTopLevelItemTemplateKey">
        <Border x:Name="Border"
                Background="{DynamicResource BaseBrush}"
                BorderBrush="Transparent"
                BorderThickness="0"
                Height="30"
                VerticalAlignment="Stretch">
            <ContentPresenter Margin="10,2"
                              ContentSource="Header"
                              VerticalAlignment="Center"
                              RecognizesAccessKey="True"/>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="MenuItem" x:Key="MenuSubmenuItemTemplateKey">
        <Border x:Name="Border"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="32" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" MinWidth="100"/>
                    <ColumnDefinition Width="Auto" MinWidth="40" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter x:Name="Icon"
                                  Margin="2,0,2,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"/>
                <CheckBox x:Name="CheckMark"
                          Margin="2,0,2,0"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Visibility="Collapsed"
                          IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                <ContentPresenter x:Name="HeaderHost1"
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  Margin="0,4,10,4"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,4,0,4"
                           VerticalAlignment="Center"
                           DockPanel.Dock="Right"/>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="MenuItem" x:Key="MenuSubmenuHeaderTemplateKey">
        <Border x:Name="Border"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="32" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" MinWidth="100"/>
                    <ColumnDefinition Width="Auto" MinWidth="40" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter x:Name="Icon"
                                  Margin="2,0,2,0"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"/>
                <ContentPresenter x:Name="HeaderHost"
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  Margin="0,4,10,4"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,4,2,4"
                           VerticalAlignment="Center"
                           DockPanel.Dock="Right"/>
                <Path Grid.Column="3"
                      Fill="{DynamicResource InactiveForegroundBrush}"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 0 7 L 4 3.5 Z">
                </Path>
                <Popup x:Name="PART_Popup"
                       Placement="Right"
                       HorizontalOffset="0"
                       VerticalOffset="-3"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                    <Border Background="{DynamicResource BackgroundBrush}"
                            BorderBrush="{DynamicResource BorderBrush}"
                            BorderThickness="1"
                            Padding="1"
                            SnapsToDevicePixels="True">
                        <ScrollViewer CanContentScroll="True"
                                      Style="{StaticResource MenuScrollViewerStyle}">
                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource InactiveForegroundBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="MenuItem" x:Key="MenuItemStyle">
        <Setter Property="Background" Value="{DynamicResource BaseBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>

        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource MenuTopLevelHeaderTemplateKey}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource MenuTopLevelItemTemplateKey}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource MenuSubmenuHeaderTemplateKey}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource MenuSubmenuItemTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="MenuItem" BasedOn="{StaticResource MenuItemStyle}"/>

</ResourceDictionary>
